version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
        environment:
          MAVEN_OPTS: -Xmx3200m
    working_directory: ~/orko
    steps:
      - run: sudo apt-get install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2

      - checkout

      - restore_cache:
          keys:
            - maven-repo-v2-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-{{ .Branch }}-
            - maven-repo-v2-
      - restore_cache:
          keys:
            - node-v4-{{ .Branch }}-{{ checksum "orko-ui/package-lock.json" }}-{{ checksum "orko-end-to-end-testing/package-lock.json" }}
            - node-v4-{{ .Branch }}-
            - node-v4-

      - run:
          command: |
            echo "Branch: $CIRCLE_BRANCH"
            echo "Project: $CIRCLE_REPOSITORY_URL"
            echo " - Username: $CIRCLE_PROJECT_USERNAME"
            echo " - Repository: $CIRCLE_PROJECT_REPONAME"
            echo "Pull request: $CIRCLE_PULL_REQUEST"
            echo " - Username: $CIRCLE_PR_USERNAME"
            echo " - Repository: $CIRCLE_PR_REPONAME"
            if [[ $CIRCLE_PROJECT_USERNAME == "gruelbox" ]]; then
              mvn -B -Pintegration-test clean install -Dcypress.command=runrecord -DskipSlowTests=true -Dskip.surefire.tests=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -T 1C
            else
              mvn -B -Pintegration-test clean install -DskipSlowTests=true -Dskip.surefire.tests=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -T 1C
            fi

      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: node-v4-{{ .Branch }}-{{ checksum "orko-ui/package-lock.json" }}}-{{ checksum "orko-end-to-end-testing/package-lock.json" }}

      - run:
          name: Saving checkstyle reports
          command: |
            mkdir -p ~/checkstyle/
            find . -type f -regex ".*/target/checkstyle-result.xml" -exec cp {} ~/checkstyle \;
          when: always
      - store_artifacts:
          path: ~/checkstyle

      - run:
          name: Saving test results (H2)
          command: |
            mkdir -p ~/junit/h2
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/h2 \;
          when: always

      - run:
          name: Saving test results (Integration)
          command: |
            mkdir -p ~/junit/integration
            find . -type f -regex ".*/target/mocha-reports/.*xml" -exec cp {} ~/junit/integration \;
          when: always

      - store_artifacts:
          path: ~/junit
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: orko-end-to-end-testing/cypress/screenshots
      - store_artifacts:
          path: orko-end-to-end-testing/app.log
workflows:
  version: 2
  all:
    jobs:
      - build
