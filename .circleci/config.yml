version: 2
notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/d1538bdca20be1aa31d8
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
        environment:
          MAVEN_OPTS: -Xmx3200m
          BUILD_ARGS: -B -U -Dskip.failsafe.tests=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
          SONAR_TARGETS: clean package sonar:sonar -Dsonar.login=${SONARQUBE_TOKEN} -Dsonar.branch.name=${CIRCLE_BRANCH} -Dsonar.pullrequest.provider=github -Dsonar.pullrequest.github.repository=${$CIRCLE_PR_REPONAME} -Dsonar.pullrequest.key=${CIRCLE_PULL_REQUEST} org.jacoco:jacoco-maven-plugin:prepare-agent

      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test
          MYSQL_USER: open
          MYSQL_PASSWORD: sesame
    working_directory: ~/orko
    steps:
      - run:
          name: Environment info
          command: |
            echo "Branch: $CIRCLE_BRANCH"
            echo "Tag: $CIRCLE_TAG"
            echo "Project: $CIRCLE_REPOSITORY_URL"
            echo " - Username: $CIRCLE_PROJECT_USERNAME"
            echo " - Repository: $CIRCLE_PROJECT_REPONAME"
            echo "Pull request: $CIRCLE_PULL_REQUEST"
            echo " - Username: $CIRCLE_PR_USERNAME"
            echo " - Repository: $CIRCLE_PR_REPONAME"
            mvn -v

      - run:
          name: Install packages
          command: sudo apt-get install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2

      - checkout

      - restore_cache:
          keys:
            - maven-repo-v2-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-{{ .Branch }}-
            - maven-repo-v2-

      - restore_cache:
          keys:
            - node-v4-{{ .Branch }}-{{ checksum "orko-ui/package-lock.json" }}-{{ checksum "orko-end-to-end-testing/package-lock.json" }}
            - node-v4-{{ .Branch }}-
            - node-v4-

      - run:
          name: Build (plus Sonar if possible)
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME != "gruelbox" || $CIRCLE_PROJECT_REPONAME != "orko" || ((-n $CIRCLE_PR_NUMBER) && ($CIRCLE_PR_USERNAME != "gruelbox" || $CIRCLE_PR_REPONAME != "orko")) ]]; then
              echo "Build only"
              mvn ${BUILD_ARGS} -Pui,e2etest,bundle clean package -T 1C -e
            else
              echo "Build and Sonar"
              mvn ${BUILD_ARGS} -Pui,e2etest,bundle,ci ${SONAR_TARGETS} -T 1C -e
            fi

      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}

      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: node-v4-{{ .Branch }}-{{ checksum "orko-ui/package-lock.json" }}}-{{ checksum "orko-end-to-end-testing/package-lock.json" }}

      - run:
          name: Saving checkstyle reports
          command: |
            mkdir -p ~/checkstyle/
            find . -type f -regex ".*/target/checkstyle-result.xml" -exec cp {} ~/checkstyle \;
          when: always

      - store_artifacts:
          path: ~/checkstyle

      - run:
          name: Saving test results (H2)
          command: |
            mkdir -p ~/junit/h2
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/h2 \;
          when: always

      - run:
          name: Saving test results (Integration)
          command: |
            mkdir -p ~/junit/integration
            find . -type f -regex ".*/target/mocha-reports/.*xml" -exec cp {} ~/junit/integration \;
          when: always

      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 30`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: MySQL tests
          command: mvn ${BUILD_ARGS} -Pdbonly clean test -Dmorf.mysql.noadmin=true -Dtestdb.url=mysql://open:sesame@127.0.0.1/test -Dspotbugs.skip=true -Dcheckstyle.skip=true

      - run:
          name: Saving test results (MySQL)
          command: |
            mkdir -p ~/junit/mysql
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/mysql \;
          when: always

      - run:
          name: Release to Github (if tag and key available)
          command: |
            if [ -n "$GITHUB_API_KEY" ]; then
              if [[ $CIRCLE_PROJECT_USERNAME == "gruelbox" && $CIRCLE_PROJECT_REPONAME == "orko" && -z "$CIRCLE_PR_NUMBER" && -n "$CIRCLE_TAG" ]]; then
                cd orko-app
                mvn github-release:release --settings ../etc/.maven-settings.xml -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
              else
                echo "Not a tag"
              fi
            else
              echo "Github API key not set"
            fi

      - store_artifacts:
          path: ~/junit
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: orko-end-to-end-testing/cypress/screenshots
      - store_artifacts:
          path: orko-end-to-end-testing/app.log
workflows:
  version: 2
  all:
    jobs:
      - build
